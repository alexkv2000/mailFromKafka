package kvo.separat.kafkaSender;

import kvo.separat.kafkaSender.message.Message;
import kvo.separat.kafkaSender.message.MessageBuilder;
import kvo.separat.kafkaSender.producer.KafkaProducerFactory;
import kvo.separat.kafkaSender.producer.MessageSender;
import kvo.separat.kafkaSender.producer.Producer;

import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.List;

public class SendMessBin {
    static final int count = 2;

    public static void main(String[] args) {
        String startDate = LocalTime.now().format(DateTimeFormatter.ofPattern("HH:mm:ss"));

        // Конфигурация Kafka
        KafkaProducerFactory producerFactory = new KafkaProducerFactory("172.18.8.60:9092,172.18.2.198:9092");
        Producer producer = producerFactory.createProducer();

        // Создание отправителя сообщений
        MessageSender messageSender = new MessageSender(producer);

        // Параметры сообщений
        String topic = "topicDVMessage";
        String recipient = "KvochkinAY@itsnn.ru";
        String recipientCC = null;
        //recipientCC = "AlexKv2000@mail.ru";

        List<String> urls = List.of(
                "\"Печатная форма1.pdf\" : \"\""

        );

        // Отправка сообщений
        for (int i = 0; i < count; i++) {
            MessageBuilder messageBuilder = MessageBuilder.builder()
                    .to(recipient)
                    // .toCC(recipientCC)
                    .caption(String.format("%s %d: %s ", "Потоков 20: Тема сообщения ", i, LocalTime.now().format(DateTimeFormatter.ofPattern("HH:mm:ss"))))
                    .body(String.format("%s : %d %s", "Тело сообщения", i, "сообщение"))
                    .urls(urls)
                    .uuid();

            Message message = messageBuilder.build();

            messageSender.sendMessage(topic, message);
        }

        // Закрытие producer
        producer.close();

        System.out.println("Дата старта    : " + startDate + "\nДата окончания : " + LocalTime.now().format(DateTimeFormatter.ofPattern("HH:mm:ss")));
    }
}